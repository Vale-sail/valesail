{"title":"链表","date":"2020-04-16T22:25:00.000Z","author":"Vale Sail","slug":"链表","tags":["数据结构"],"categories":["学习笔记"],"updated":"2021-03-04T13:48:16.047Z","content":"<p>链表是一种线性的数据存储结构，但是不使用连续的空间进行存储。</p>\n<p>相比数组 链表具有</p>\n<ol>\n<li>支持动态扩容<blockquote>\n<p>数组扩容需要先申请更大的空间然后将数组的数据进行拷贝 但是链表可以直接进行追加</p>\n</blockquote>\n</li>\n<li>插入和删除 效率高<blockquote>\n<p>通过修改链表的指针指向实现，不需要搬迁数据</p>\n</blockquote>\n</li>\n<li>不支持随机访问<blockquote>\n<p>由于链表的存储地址不连续，所以无法通过下标直接访问，需要依次遍历</p>\n</blockquote>\n</li>\n<li>不利于CPU的预读<blockquote>\n<p>CPU 在读取数据的时候 会预先加载一部分数据，数组是连续地址存储但是链表不是连续存储<br>链表是 以时间来换空间<br>数组是 以空间来换时间 </p>\n</blockquote>\n</li>\n</ol>\n<p>链表分类</p>\n<ol>\n<li>单向链表<blockquote>\n<p>每个节点和他的下一个节点相连</p>\n</blockquote>\n</li>\n<li>循环链表<blockquote>\n<p>在单向的链表的基础上，尾结点和头结点相连<br>约瑟夫环问题</p>\n</blockquote>\n</li>\n<li>双向链表<blockquote>\n<p>在单向链表的基础上 节点之间新增指向上一个节点的指针<br>在链表有序的是 提升链表的查询效率</p>\n</blockquote>\n</li>\n<li>双向循环链表<blockquote>\n<p>在双向链表的基础上 头尾相连</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"时间和空间的交换-提示程序的效率\">时间和空间的交换 提示程序的效率<a href=\"post/链表#时间和空间的交换-提示程序的效率\"></a></h3><p>缓存淘汰策略</p>\n<ol>\n<li>LRU<blockquote>\n<p>最近最少使用</p>\n</blockquote>\n</li>\n<li>LFU<blockquote>\n<p>最少使用</p>\n</blockquote>\n</li>\n<li>FIFO<blockquote>\n<p>先进先出</p>\n</blockquote>\n</li>\n</ol>\n","prev":{"title":"PHPUnit的一点点","slug":"工作记录"},"next":{"title":"SOLID原则","slug":"SOLID原则"},"link":"https://vale-sail.github.io/post/链表/"}